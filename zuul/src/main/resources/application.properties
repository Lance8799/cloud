server.port=10010
# 开启数据压缩
server.compression.enabled=true
# 指定数据压缩类型
server.compression.mime-types=text/html,text/xml,text/javascript,text/css,text/plain,application/javascript

spring.application.name=zuul

# 客户端在注册时服务的 Instance ID
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
eureka.instance.prefer-ip-address=true
# 自定义实例跳转链接
eureka.instance.status-page-url=http://${spring.cloud.client.ipAddress}:${server.port}/swagger-ui.html
# 注册中心地址
eureka.client.service-url.defaultZone=http://lance:123@localhost:10000/eureka

## Rabbit ##
# 用于zipkin
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

## Zipkin rabbitmq ##
spring.zipkin.rabbitmq.queue=zipkin

## Sleuth ##
# zipkin地址，默认为：http://localhost:9411。使用MQ方式时不需要
#spring.zipkin.base-url=http://localhost:19411
# 抽样率，1为100%即每个请求，默认为0.1。Http方式去发送采集数据, 对性能有很大的影响
spring.sleuth.sampler.percentage=1

## Zuul ##
# 对所有接口前增加前缀
#zuul.prefix=/cloud
# 忽略所有没有配置的服务
zuul.ignored-services=*
# 忽略路径规则，以下表示所有接口前缀包含ignore的也会忽略
#zuul.ignored-patterns=/**/ignore/**
# 忽略请求头，对request和response
#zuul.ignored-headers=
# 关闭忽略Spring Security的安全认证请求头
#zuul.ignore-security-headers=false
# 忽略指定请求头，可设置为空不忽略，默认为"Cookie", "Set-Cookie", "Authorization"。在指定服务中设置会覆盖全局
#zuul.sensitive-headers=

# 网关ribbon的隔离策略，默认为SEMAPHORE
#zuul.ribbon-isolation-strategy=thread
# 指定隔离策略为thread时，可分开使用不同线程池，默认为同一个
#zuul.thread-pool.use-separate-thread-pools=true
# 线程池前缀
#zuul.thread-pool.thread-pool-key-prefix=zuultp

#通过配置方式来禁用过滤器,格式为"zuul.过滤器的类名.过滤器类型.disable=true"
zuul.SendErrorFilter.error.disable=true
zuul.AddResponseHeaderFilter.post.disable=true

#zuul.routes.legacy.path=/**
#zuul.routes.legacy.url=www.google.com

# 重新定义服务的访问路径，key默认会设置为serviceId，可设置多个key对应一个服务
zuul.routes.sample.path=/sample/**
zuul.routes.sample.service-id=sample

zuul.routes.substitute.path=/substitute/**
# 路由后取消全局前缀，暂不明
#zuul.routes.substitute.strip-prefix=false

# 本地跳转
zuul.routes.local.path=/local/**
zuul.routes.local.url=forward:/local

zuul.routes.auth.path=/auth/**
zuul.routes.auth.url=forward:/auth

## 自定义 ##
## Swagger ##
swagger.group.auth.ant-paths=/auth/**
swagger.group.auth.title=Auth API

swagger.group.local.ant-paths=/local/**
swagger.group.local.title=Local API

white.apis=/substitute/product/